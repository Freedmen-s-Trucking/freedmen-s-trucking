/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as PreviewIndexImport } from './routes/preview/index'
import { Route as PreviewTrackingImport } from './routes/preview/tracking'
import { Route as PreviewServicesImport } from './routes/preview/services'
import { Route as PreviewScheduleDeliveryImport } from './routes/preview/schedule-delivery'
import { Route as PreviewContactImport } from './routes/preview/contact'
import { Route as PreviewAboutImport } from './routes/preview/about'
import { Route as AppUserSplashScreenImport } from './routes/app/user/splash-screen'
import { Route as AppUserSignupImport } from './routes/app/user/signup'
import { Route as AppUserSigninImport } from './routes/app/user/signin'
import { Route as AppUserOnboardingImport } from './routes/app/user/onboarding'
import { Route as AppDriverDashboardImport } from './routes/app/driver/dashboard'
import { Route as AppCustomerDashboardImport } from './routes/app/customer/dashboard'
import { Route as AppAdminDashboardImport } from './routes/app/admin/dashboard'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PreviewIndexRoute = PreviewIndexImport.update({
  id: '/preview/',
  path: '/preview/',
  getParentRoute: () => rootRoute,
} as any)

const PreviewTrackingRoute = PreviewTrackingImport.update({
  id: '/preview/tracking',
  path: '/preview/tracking',
  getParentRoute: () => rootRoute,
} as any)

const PreviewServicesRoute = PreviewServicesImport.update({
  id: '/preview/services',
  path: '/preview/services',
  getParentRoute: () => rootRoute,
} as any)

const PreviewScheduleDeliveryRoute = PreviewScheduleDeliveryImport.update({
  id: '/preview/schedule-delivery',
  path: '/preview/schedule-delivery',
  getParentRoute: () => rootRoute,
} as any)

const PreviewContactRoute = PreviewContactImport.update({
  id: '/preview/contact',
  path: '/preview/contact',
  getParentRoute: () => rootRoute,
} as any)

const PreviewAboutRoute = PreviewAboutImport.update({
  id: '/preview/about',
  path: '/preview/about',
  getParentRoute: () => rootRoute,
} as any)

const AppUserSplashScreenRoute = AppUserSplashScreenImport.update({
  id: '/app/user/splash-screen',
  path: '/app/user/splash-screen',
  getParentRoute: () => rootRoute,
} as any)

const AppUserSignupRoute = AppUserSignupImport.update({
  id: '/app/user/signup',
  path: '/app/user/signup',
  getParentRoute: () => rootRoute,
} as any)

const AppUserSigninRoute = AppUserSigninImport.update({
  id: '/app/user/signin',
  path: '/app/user/signin',
  getParentRoute: () => rootRoute,
} as any)

const AppUserOnboardingRoute = AppUserOnboardingImport.update({
  id: '/app/user/onboarding',
  path: '/app/user/onboarding',
  getParentRoute: () => rootRoute,
} as any)

const AppDriverDashboardRoute = AppDriverDashboardImport.update({
  id: '/app/driver/dashboard',
  path: '/app/driver/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AppCustomerDashboardRoute = AppCustomerDashboardImport.update({
  id: '/app/customer/dashboard',
  path: '/app/customer/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AppAdminDashboardRoute = AppAdminDashboardImport.update({
  id: '/app/admin/dashboard',
  path: '/app/admin/dashboard',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/preview/about': {
      id: '/preview/about'
      path: '/preview/about'
      fullPath: '/preview/about'
      preLoaderRoute: typeof PreviewAboutImport
      parentRoute: typeof rootRoute
    }
    '/preview/contact': {
      id: '/preview/contact'
      path: '/preview/contact'
      fullPath: '/preview/contact'
      preLoaderRoute: typeof PreviewContactImport
      parentRoute: typeof rootRoute
    }
    '/preview/schedule-delivery': {
      id: '/preview/schedule-delivery'
      path: '/preview/schedule-delivery'
      fullPath: '/preview/schedule-delivery'
      preLoaderRoute: typeof PreviewScheduleDeliveryImport
      parentRoute: typeof rootRoute
    }
    '/preview/services': {
      id: '/preview/services'
      path: '/preview/services'
      fullPath: '/preview/services'
      preLoaderRoute: typeof PreviewServicesImport
      parentRoute: typeof rootRoute
    }
    '/preview/tracking': {
      id: '/preview/tracking'
      path: '/preview/tracking'
      fullPath: '/preview/tracking'
      preLoaderRoute: typeof PreviewTrackingImport
      parentRoute: typeof rootRoute
    }
    '/preview/': {
      id: '/preview/'
      path: '/preview'
      fullPath: '/preview'
      preLoaderRoute: typeof PreviewIndexImport
      parentRoute: typeof rootRoute
    }
    '/app/admin/dashboard': {
      id: '/app/admin/dashboard'
      path: '/app/admin/dashboard'
      fullPath: '/app/admin/dashboard'
      preLoaderRoute: typeof AppAdminDashboardImport
      parentRoute: typeof rootRoute
    }
    '/app/customer/dashboard': {
      id: '/app/customer/dashboard'
      path: '/app/customer/dashboard'
      fullPath: '/app/customer/dashboard'
      preLoaderRoute: typeof AppCustomerDashboardImport
      parentRoute: typeof rootRoute
    }
    '/app/driver/dashboard': {
      id: '/app/driver/dashboard'
      path: '/app/driver/dashboard'
      fullPath: '/app/driver/dashboard'
      preLoaderRoute: typeof AppDriverDashboardImport
      parentRoute: typeof rootRoute
    }
    '/app/user/onboarding': {
      id: '/app/user/onboarding'
      path: '/app/user/onboarding'
      fullPath: '/app/user/onboarding'
      preLoaderRoute: typeof AppUserOnboardingImport
      parentRoute: typeof rootRoute
    }
    '/app/user/signin': {
      id: '/app/user/signin'
      path: '/app/user/signin'
      fullPath: '/app/user/signin'
      preLoaderRoute: typeof AppUserSigninImport
      parentRoute: typeof rootRoute
    }
    '/app/user/signup': {
      id: '/app/user/signup'
      path: '/app/user/signup'
      fullPath: '/app/user/signup'
      preLoaderRoute: typeof AppUserSignupImport
      parentRoute: typeof rootRoute
    }
    '/app/user/splash-screen': {
      id: '/app/user/splash-screen'
      path: '/app/user/splash-screen'
      fullPath: '/app/user/splash-screen'
      preLoaderRoute: typeof AppUserSplashScreenImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/preview/about': typeof PreviewAboutRoute
  '/preview/contact': typeof PreviewContactRoute
  '/preview/schedule-delivery': typeof PreviewScheduleDeliveryRoute
  '/preview/services': typeof PreviewServicesRoute
  '/preview/tracking': typeof PreviewTrackingRoute
  '/preview': typeof PreviewIndexRoute
  '/app/admin/dashboard': typeof AppAdminDashboardRoute
  '/app/customer/dashboard': typeof AppCustomerDashboardRoute
  '/app/driver/dashboard': typeof AppDriverDashboardRoute
  '/app/user/onboarding': typeof AppUserOnboardingRoute
  '/app/user/signin': typeof AppUserSigninRoute
  '/app/user/signup': typeof AppUserSignupRoute
  '/app/user/splash-screen': typeof AppUserSplashScreenRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/preview/about': typeof PreviewAboutRoute
  '/preview/contact': typeof PreviewContactRoute
  '/preview/schedule-delivery': typeof PreviewScheduleDeliveryRoute
  '/preview/services': typeof PreviewServicesRoute
  '/preview/tracking': typeof PreviewTrackingRoute
  '/preview': typeof PreviewIndexRoute
  '/app/admin/dashboard': typeof AppAdminDashboardRoute
  '/app/customer/dashboard': typeof AppCustomerDashboardRoute
  '/app/driver/dashboard': typeof AppDriverDashboardRoute
  '/app/user/onboarding': typeof AppUserOnboardingRoute
  '/app/user/signin': typeof AppUserSigninRoute
  '/app/user/signup': typeof AppUserSignupRoute
  '/app/user/splash-screen': typeof AppUserSplashScreenRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/preview/about': typeof PreviewAboutRoute
  '/preview/contact': typeof PreviewContactRoute
  '/preview/schedule-delivery': typeof PreviewScheduleDeliveryRoute
  '/preview/services': typeof PreviewServicesRoute
  '/preview/tracking': typeof PreviewTrackingRoute
  '/preview/': typeof PreviewIndexRoute
  '/app/admin/dashboard': typeof AppAdminDashboardRoute
  '/app/customer/dashboard': typeof AppCustomerDashboardRoute
  '/app/driver/dashboard': typeof AppDriverDashboardRoute
  '/app/user/onboarding': typeof AppUserOnboardingRoute
  '/app/user/signin': typeof AppUserSigninRoute
  '/app/user/signup': typeof AppUserSignupRoute
  '/app/user/splash-screen': typeof AppUserSplashScreenRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/preview/about'
    | '/preview/contact'
    | '/preview/schedule-delivery'
    | '/preview/services'
    | '/preview/tracking'
    | '/preview'
    | '/app/admin/dashboard'
    | '/app/customer/dashboard'
    | '/app/driver/dashboard'
    | '/app/user/onboarding'
    | '/app/user/signin'
    | '/app/user/signup'
    | '/app/user/splash-screen'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/preview/about'
    | '/preview/contact'
    | '/preview/schedule-delivery'
    | '/preview/services'
    | '/preview/tracking'
    | '/preview'
    | '/app/admin/dashboard'
    | '/app/customer/dashboard'
    | '/app/driver/dashboard'
    | '/app/user/onboarding'
    | '/app/user/signin'
    | '/app/user/signup'
    | '/app/user/splash-screen'
  id:
    | '__root__'
    | '/'
    | '/preview/about'
    | '/preview/contact'
    | '/preview/schedule-delivery'
    | '/preview/services'
    | '/preview/tracking'
    | '/preview/'
    | '/app/admin/dashboard'
    | '/app/customer/dashboard'
    | '/app/driver/dashboard'
    | '/app/user/onboarding'
    | '/app/user/signin'
    | '/app/user/signup'
    | '/app/user/splash-screen'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PreviewAboutRoute: typeof PreviewAboutRoute
  PreviewContactRoute: typeof PreviewContactRoute
  PreviewScheduleDeliveryRoute: typeof PreviewScheduleDeliveryRoute
  PreviewServicesRoute: typeof PreviewServicesRoute
  PreviewTrackingRoute: typeof PreviewTrackingRoute
  PreviewIndexRoute: typeof PreviewIndexRoute
  AppAdminDashboardRoute: typeof AppAdminDashboardRoute
  AppCustomerDashboardRoute: typeof AppCustomerDashboardRoute
  AppDriverDashboardRoute: typeof AppDriverDashboardRoute
  AppUserOnboardingRoute: typeof AppUserOnboardingRoute
  AppUserSigninRoute: typeof AppUserSigninRoute
  AppUserSignupRoute: typeof AppUserSignupRoute
  AppUserSplashScreenRoute: typeof AppUserSplashScreenRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PreviewAboutRoute: PreviewAboutRoute,
  PreviewContactRoute: PreviewContactRoute,
  PreviewScheduleDeliveryRoute: PreviewScheduleDeliveryRoute,
  PreviewServicesRoute: PreviewServicesRoute,
  PreviewTrackingRoute: PreviewTrackingRoute,
  PreviewIndexRoute: PreviewIndexRoute,
  AppAdminDashboardRoute: AppAdminDashboardRoute,
  AppCustomerDashboardRoute: AppCustomerDashboardRoute,
  AppDriverDashboardRoute: AppDriverDashboardRoute,
  AppUserOnboardingRoute: AppUserOnboardingRoute,
  AppUserSigninRoute: AppUserSigninRoute,
  AppUserSignupRoute: AppUserSignupRoute,
  AppUserSplashScreenRoute: AppUserSplashScreenRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/preview/about",
        "/preview/contact",
        "/preview/schedule-delivery",
        "/preview/services",
        "/preview/tracking",
        "/preview/",
        "/app/admin/dashboard",
        "/app/customer/dashboard",
        "/app/driver/dashboard",
        "/app/user/onboarding",
        "/app/user/signin",
        "/app/user/signup",
        "/app/user/splash-screen"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/preview/about": {
      "filePath": "preview/about.tsx"
    },
    "/preview/contact": {
      "filePath": "preview/contact.tsx"
    },
    "/preview/schedule-delivery": {
      "filePath": "preview/schedule-delivery.tsx"
    },
    "/preview/services": {
      "filePath": "preview/services.tsx"
    },
    "/preview/tracking": {
      "filePath": "preview/tracking.tsx"
    },
    "/preview/": {
      "filePath": "preview/index.tsx"
    },
    "/app/admin/dashboard": {
      "filePath": "app/admin/dashboard.tsx"
    },
    "/app/customer/dashboard": {
      "filePath": "app/customer/dashboard.tsx"
    },
    "/app/driver/dashboard": {
      "filePath": "app/driver/dashboard.tsx"
    },
    "/app/user/onboarding": {
      "filePath": "app/user/onboarding.tsx"
    },
    "/app/user/signin": {
      "filePath": "app/user/signin.tsx"
    },
    "/app/user/signup": {
      "filePath": "app/user/signup.tsx"
    },
    "/app/user/splash-screen": {
      "filePath": "app/user/splash-screen.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
