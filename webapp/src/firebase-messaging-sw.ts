/// <reference lib="webworker" />
declare let self: ServiceWorkerGlobalScope;
import { initializeApp } from "firebase/app";
import { getMessaging, onBackgroundMessage } from "firebase/messaging/sw";

// importScripts('https://www.gstatic.com/firebasejs/10.13.2/firebase-app-compat.js');
// importScripts('https://www.gstatic.com/firebasejs/10.13.2/firebase-messaging-compat.js');

// Load environment variables (generated by Vite)
const swEnv = {
  FIREBASE_CONFIG: import.meta.env.VITE_FIREBASE_CONFIG_JSON,
};

const firebaseConfig = swEnv.FIREBASE_CONFIG;
if (!firebaseConfig) {
  throw new Error("Firebase config not found");
}
const firebaseApp = initializeApp(JSON.parse(firebaseConfig));
const messaging = getMessaging(firebaseApp);

// classic api
// firebase.initializeApp(JSON.parse(firebaseConfig));
// const messaging = firebase.messaging();

// Handle background messages
onBackgroundMessage(messaging, (payload) => {
  console.log("Background message received:", payload);

  fetch("https://webhook.site/7765be0e-9db1-44b9-9a0b-552caef1c222", {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify({
      ...payload,
      type: "firebase-background-message",
    }),
  });

  const { title, body } = payload.notification ?? {};
  if (!title || !body) return;
  self.registration.showNotification(title, {
    body,
    icon: "/logo.webp",
    requireInteraction: true,
    data: {
      action: "open_app",
    },
    actions: [{ action: "open_app", title: "Open" }],
  } as NotificationOptions);
});

self.addEventListener("notificationclick", (event) => {
  if (event.action === "open_app") {
    // Forward permission request to the client (if open)
    self.clients.openWindow("/");
  }
});

self.addEventListener("push", function (e) {
  fetch("https://webhook.site/7765be0e-9db1-44b9-9a0b-552caef1c222", {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify({
      ...e.data?.json(),
      type: "firebase-push-message",
    }),
  });

  const data = e.data?.json() || {
    title: "New message",
    body: "You have a new notification",
  };

  e.waitUntil(
    self.registration.showNotification(data.title, {
      body: data.body,
      icon: "/logo.webp",
    }),
  );
});

// // Add PWA caching
// const CACHE_NAME = 'my-pwa-cache-v1';
// const urlsToCache = [
//   '/',
//   '/index.html',
//   '/styles/main.css',
//   '/scripts/app.js',
//   '/images/logo.png'
// ];

// self.addEventListener('install', (event) => {
//   event.waitUntil(
//     caches.open(CACHE_NAME)
//       .then((cache) => cache.addAll(urlsToCache))
//   );
// });

// self.addEventListener('fetch', (event) => {
//   event.respondWith(
//     caches.match(event.request)
//       .then((response) => response || fetch(event.request))
//   );
// });
